// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: userpb/user.proto

package userpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SingleUserInfoRequest) Reset() {
	*x = SingleUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userpb_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserInfoRequest) ProtoMessage() {}

func (x *SingleUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userpb_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserInfoRequest.ProtoReflect.Descriptor instead.
func (*SingleUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_userpb_user_proto_rawDescGZIP(), []int{0}
}

func (x *SingleUserInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Fname   string  `protobuf:"bytes,2,opt,name=Fname,proto3" json:"Fname,omitempty"`
	City    string  `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	Phone   int32   `protobuf:"varint,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Height  float32 `protobuf:"fixed32,5,opt,name=Height,proto3" json:"Height,omitempty"`
	Married bool    `protobuf:"varint,6,opt,name=Married,proto3" json:"Married,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userpb_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_userpb_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_userpb_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetFname() string {
	if x != nil {
		return x.Fname
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetPhone() int32 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *UserInfo) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UserInfo) GetMarried() bool {
	if x != nil {
		return x.Married
	}
	return false
}

type SingleUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails *UserInfo `protobuf:"bytes,1,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
}

func (x *SingleUserInfoResponse) Reset() {
	*x = SingleUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userpb_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserInfoResponse) ProtoMessage() {}

func (x *SingleUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userpb_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserInfoResponse.ProtoReflect.Descriptor instead.
func (*SingleUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_userpb_user_proto_rawDescGZIP(), []int{2}
}

func (x *SingleUserInfoResponse) GetUserDetails() *UserInfo {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

type MultiUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *MultiUserInfoRequest) Reset() {
	*x = MultiUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userpb_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiUserInfoRequest) ProtoMessage() {}

func (x *MultiUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userpb_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiUserInfoRequest.ProtoReflect.Descriptor instead.
func (*MultiUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_userpb_user_proto_rawDescGZIP(), []int{3}
}

func (x *MultiUserInfoRequest) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type MultiUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails []*UserInfo `protobuf:"bytes,1,rep,name=userDetails,proto3" json:"userDetails,omitempty"`
}

func (x *MultiUserInfoResponse) Reset() {
	*x = MultiUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userpb_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiUserInfoResponse) ProtoMessage() {}

func (x *MultiUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userpb_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiUserInfoResponse.ProtoReflect.Descriptor instead.
func (*MultiUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_userpb_user_proto_rawDescGZIP(), []int{4}
}

func (x *MultiUserInfoResponse) GetUserDetails() []*UserInfo {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

var File_userpb_user_proto protoreflect.FileDescriptor

var file_userpb_user_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x27, 0x0a, 0x15, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x65, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xd4, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userpb_user_proto_rawDescOnce sync.Once
	file_userpb_user_proto_rawDescData = file_userpb_user_proto_rawDesc
)

func file_userpb_user_proto_rawDescGZIP() []byte {
	file_userpb_user_proto_rawDescOnce.Do(func() {
		file_userpb_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_userpb_user_proto_rawDescData)
	})
	return file_userpb_user_proto_rawDescData
}

var file_userpb_user_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_userpb_user_proto_goTypes = []interface{}{
	(*SingleUserInfoRequest)(nil),  // 0: userservice.singleUserInfoRequest
	(*UserInfo)(nil),               // 1: userservice.UserInfo
	(*SingleUserInfoResponse)(nil), // 2: userservice.singleUserInfoResponse
	(*MultiUserInfoRequest)(nil),   // 3: userservice.multiUserInfoRequest
	(*MultiUserInfoResponse)(nil),  // 4: userservice.multiUserInfoResponse
}
var file_userpb_user_proto_depIdxs = []int32{
	1, // 0: userservice.singleUserInfoResponse.userDetails:type_name -> userservice.UserInfo
	1, // 1: userservice.multiUserInfoResponse.userDetails:type_name -> userservice.UserInfo
	0, // 2: userservice.getUserInfoService.GetSingleUserInfo:input_type -> userservice.singleUserInfoRequest
	3, // 3: userservice.getUserInfoService.GetMultipleUserInfo:input_type -> userservice.multiUserInfoRequest
	2, // 4: userservice.getUserInfoService.GetSingleUserInfo:output_type -> userservice.singleUserInfoResponse
	4, // 5: userservice.getUserInfoService.GetMultipleUserInfo:output_type -> userservice.multiUserInfoResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_userpb_user_proto_init() }
func file_userpb_user_proto_init() {
	if File_userpb_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userpb_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userpb_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userpb_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userpb_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userpb_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userpb_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userpb_user_proto_goTypes,
		DependencyIndexes: file_userpb_user_proto_depIdxs,
		MessageInfos:      file_userpb_user_proto_msgTypes,
	}.Build()
	File_userpb_user_proto = out.File
	file_userpb_user_proto_rawDesc = nil
	file_userpb_user_proto_goTypes = nil
	file_userpb_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetUserInfoServiceClient is the client API for GetUserInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetUserInfoServiceClient interface {
	GetSingleUserInfo(ctx context.Context, in *SingleUserInfoRequest, opts ...grpc.CallOption) (*SingleUserInfoResponse, error)
	GetMultipleUserInfo(ctx context.Context, in *MultiUserInfoRequest, opts ...grpc.CallOption) (*MultiUserInfoResponse, error)
}

type getUserInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGetUserInfoServiceClient(cc grpc.ClientConnInterface) GetUserInfoServiceClient {
	return &getUserInfoServiceClient{cc}
}

func (c *getUserInfoServiceClient) GetSingleUserInfo(ctx context.Context, in *SingleUserInfoRequest, opts ...grpc.CallOption) (*SingleUserInfoResponse, error) {
	out := new(SingleUserInfoResponse)
	err := c.cc.Invoke(ctx, "/userservice.getUserInfoService/GetSingleUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getUserInfoServiceClient) GetMultipleUserInfo(ctx context.Context, in *MultiUserInfoRequest, opts ...grpc.CallOption) (*MultiUserInfoResponse, error) {
	out := new(MultiUserInfoResponse)
	err := c.cc.Invoke(ctx, "/userservice.getUserInfoService/GetMultipleUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetUserInfoServiceServer is the server API for GetUserInfoService service.
type GetUserInfoServiceServer interface {
	GetSingleUserInfo(context.Context, *SingleUserInfoRequest) (*SingleUserInfoResponse, error)
	GetMultipleUserInfo(context.Context, *MultiUserInfoRequest) (*MultiUserInfoResponse, error)
}

// UnimplementedGetUserInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGetUserInfoServiceServer struct {
}

func (*UnimplementedGetUserInfoServiceServer) GetSingleUserInfo(context.Context, *SingleUserInfoRequest) (*SingleUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleUserInfo not implemented")
}
func (*UnimplementedGetUserInfoServiceServer) GetMultipleUserInfo(context.Context, *MultiUserInfoRequest) (*MultiUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleUserInfo not implemented")
}

func RegisterGetUserInfoServiceServer(s *grpc.Server, srv GetUserInfoServiceServer) {
	s.RegisterService(&_GetUserInfoService_serviceDesc, srv)
}

func _GetUserInfoService_GetSingleUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetUserInfoServiceServer).GetSingleUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.getUserInfoService/GetSingleUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetUserInfoServiceServer).GetSingleUserInfo(ctx, req.(*SingleUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetUserInfoService_GetMultipleUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetUserInfoServiceServer).GetMultipleUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.getUserInfoService/GetMultipleUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetUserInfoServiceServer).GetMultipleUserInfo(ctx, req.(*MultiUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetUserInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userservice.getUserInfoService",
	HandlerType: (*GetUserInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSingleUserInfo",
			Handler:    _GetUserInfoService_GetSingleUserInfo_Handler,
		},
		{
			MethodName: "GetMultipleUserInfo",
			Handler:    _GetUserInfoService_GetMultipleUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userpb/user.proto",
}
